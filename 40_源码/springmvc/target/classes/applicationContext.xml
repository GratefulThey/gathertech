<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd 
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd 
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd ">

    <!-- freemarker html渲染器配置，搜索/WEB-INF/pages下的.html进行匹配 --> 

    <!-- <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/pages/" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">0.##########</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
    </bean> -->
    
    <context:component-scan base-package="com.springmvc.controller">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    
    <!--view -->
    <!-- 获取配置文件 -->
    <!-- <bean id="config"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:jdbc.properties</value>
            </list>
        </property>
    </bean> -->
    <!-- 获取数据源  方式一(dbcp)-->
    <!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/spring_demo?characterEncoding=utf8" />
        <property name="username" value="root" />
        <property name="password" value="root" />
    </bean> -->
    
    <!-- import -->
    <context:property-placeholder location="classpath:props/config.properties"/>
    <!-- 获取数据源 方式二(DataSource c3p0) -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${dataSource.user}"></property>
        <property name="password" value="${dataSource.password}"></property>
        <property name="jdbcUrl" value="${dataSource.jdbcUrl}"></property>
        <property name="driverClass" value="${dataSource.driverClass}"></property>
    </bean>

    <!-- spring和MyBatis完美整合 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
         <!-- 自动扫描mapping.xml文件  -->
        <property name="mapperLocations" value="classpath:com/springmvc/mybatis/mapper/*.xml"/>
    </bean>
    <!-- mapper接口所在包名，Spring会自动查找其下的类   -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.springmvc.mybatis.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    
    <!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
        p:dataSource-ref="dataSource"
        p:configLocation="classpath:mybatisConfig.xml"
        p:mapperLocations="classpath:com/springmvc/mybatis/mapper/*.xml" 
        />
        mybatis数据访问的核心模板
    <bean class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory" />
    </bean>
                    用于将接口映射为具体的实例 ，使得在Service中可以直接注入相关的Dao接口来进行数据访问
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
        p:sqlSessionFactory-ref="sqlSessionFactory"
        p:basePackage="com.springmvc.mybatis.mapper"
        /> -->

    <!-- 事务管理配置 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
</beans>
